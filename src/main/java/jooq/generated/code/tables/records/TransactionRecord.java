/*
 * This file is generated by jOOQ.
 */
package jooq.generated.code.tables.records;


import java.math.BigDecimal;
import java.util.UUID;

import javax.annotation.processing.Generated;

import jooq.generated.code.tables.Transaction;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record5<UUID, Integer, UUID, BigDecimal, UUID> {

    private static final long serialVersionUID = 510544055;

    /**
     * Setter for <code>PUBLIC.TRANSACTION.ID</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTION.ID</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTION.TYPE</code>.
     */
    public void setType(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTION.TYPE</code>.
     */
    public Integer getType() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTION.ACCOUNT_ID</code>.
     */
    public void setAccountId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTION.ACCOUNT_ID</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTION.AMOUNT</code>.
     */
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTION.AMOUNT</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTION.TRANSFER_ID</code>.
     */
    public void setTransferId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTION.TRANSFER_ID</code>.
     */
    public UUID getTransferId() {
        return (UUID) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, Integer, UUID, BigDecimal, UUID> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, Integer, UUID, BigDecimal, UUID> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Transaction.TRANSACTION.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Transaction.TRANSACTION.TYPE;
    }

    @Override
    public Field<UUID> field3() {
        return Transaction.TRANSACTION.ACCOUNT_ID;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Transaction.TRANSACTION.AMOUNT;
    }

    @Override
    public Field<UUID> field5() {
        return Transaction.TRANSACTION.TRANSFER_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getType();
    }

    @Override
    public UUID component3() {
        return getAccountId();
    }

    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    @Override
    public UUID component5() {
        return getTransferId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getType();
    }

    @Override
    public UUID value3() {
        return getAccountId();
    }

    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    @Override
    public UUID value5() {
        return getTransferId();
    }

    @Override
    public TransactionRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TransactionRecord value2(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public TransactionRecord value3(UUID value) {
        setAccountId(value);
        return this;
    }

    @Override
    public TransactionRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransactionRecord value5(UUID value) {
        setTransferId(value);
        return this;
    }

    @Override
    public TransactionRecord values(UUID value1, Integer value2, UUID value3, BigDecimal value4, UUID value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(UUID id, Integer type, UUID accountId, BigDecimal amount, UUID transferId) {
        super(Transaction.TRANSACTION);

        set(0, id);
        set(1, type);
        set(2, accountId);
        set(3, amount);
        set(4, transferId);
    }
}
