/*
 * This file is generated by jOOQ.
 */
package jooq.generated.code;


import javax.annotation.processing.Generated;

import jooq.generated.code.tables.Account;
import jooq.generated.code.tables.AccountType;
import jooq.generated.code.tables.Bank;
import jooq.generated.code.tables.Currency;
import jooq.generated.code.tables.Customer;
import jooq.generated.code.tables.FlywaySchemaHistory;
import jooq.generated.code.tables.Transaction;
import jooq.generated.code.tables.Transfer;
import jooq.generated.code.tables.records.AccountRecord;
import jooq.generated.code.tables.records.AccountTypeRecord;
import jooq.generated.code.tables.records.BankRecord;
import jooq.generated.code.tables.records.CurrencyRecord;
import jooq.generated.code.tables.records.CustomerRecord;
import jooq.generated.code.tables.records.FlywaySchemaHistoryRecord;
import jooq.generated.code.tables.records.TransactionRecord;
import jooq.generated.code.tables.records.TransferRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountTypeRecord, Integer> IDENTITY_ACCOUNT_TYPE = Identities0.IDENTITY_ACCOUNT_TYPE;
    public static final Identity<CurrencyRecord, Integer> IDENTITY_CURRENCY = Identities0.IDENTITY_CURRENCY;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT_PK = UniqueKeys0.ACCOUNT_PK;
    public static final UniqueKey<AccountTypeRecord> ACCOUNT_TYPE_PK = UniqueKeys0.ACCOUNT_TYPE_PK;
    public static final UniqueKey<BankRecord> BANK_PK = UniqueKeys0.BANK_PK;
    public static final UniqueKey<CurrencyRecord> CURRENCY_PK = UniqueKeys0.CURRENCY_PK;
    public static final UniqueKey<CustomerRecord> CUSTOMER_PK = UniqueKeys0.CUSTOMER_PK;
    public static final UniqueKey<TransactionRecord> TRANSACTION_PK = UniqueKeys0.TRANSACTION_PK;
    public static final UniqueKey<TransferRecord> TRANSFER_PK = UniqueKeys0.TRANSFER_PK;
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRecord, BankRecord> ACCOUNT_BANK_ID_FK = ForeignKeys0.ACCOUNT_BANK_ID_FK;
    public static final ForeignKey<AccountRecord, CustomerRecord> ACCOUNT_CUSTOMER_ID_FK = ForeignKeys0.ACCOUNT_CUSTOMER_ID_FK;
    public static final ForeignKey<AccountRecord, CurrencyRecord> ACCOUNT_CURRENCY_ID_FK = ForeignKeys0.ACCOUNT_CURRENCY_ID_FK;
    public static final ForeignKey<AccountRecord, AccountTypeRecord> ACCOUNT_ACCOUNT_TYPE_ID_FK = ForeignKeys0.ACCOUNT_ACCOUNT_TYPE_ID_FK;
    public static final ForeignKey<TransactionRecord, AccountRecord> TRANSACTION_ACCOUNT_ID_FK = ForeignKeys0.TRANSACTION_ACCOUNT_ID_FK;
    public static final ForeignKey<TransactionRecord, TransferRecord> TRANSACTION_TRANSFER_ID_FK = ForeignKeys0.TRANSACTION_TRANSFER_ID_FK;
    public static final ForeignKey<TransferRecord, AccountRecord> TRANSFER_ACCOUNT_ID_FK_1 = ForeignKeys0.TRANSFER_ACCOUNT_ID_FK_1;
    public static final ForeignKey<TransferRecord, AccountRecord> TRANSFER_ACCOUNT_ID_FK_2 = ForeignKeys0.TRANSFER_ACCOUNT_ID_FK_2;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountTypeRecord, Integer> IDENTITY_ACCOUNT_TYPE = Internal.createIdentity(AccountType.ACCOUNT_TYPE, AccountType.ACCOUNT_TYPE.ID);
        public static Identity<CurrencyRecord, Integer> IDENTITY_CURRENCY = Internal.createIdentity(Currency.CURRENCY, Currency.CURRENCY.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> ACCOUNT_PK = Internal.createUniqueKey(Account.ACCOUNT, "ACCOUNT_PK", Account.ACCOUNT.ID);
        public static final UniqueKey<AccountTypeRecord> ACCOUNT_TYPE_PK = Internal.createUniqueKey(AccountType.ACCOUNT_TYPE, "ACCOUNT_TYPE_PK", AccountType.ACCOUNT_TYPE.ID);
        public static final UniqueKey<BankRecord> BANK_PK = Internal.createUniqueKey(Bank.BANK, "BANK_PK", Bank.BANK.ID);
        public static final UniqueKey<CurrencyRecord> CURRENCY_PK = Internal.createUniqueKey(Currency.CURRENCY, "CURRENCY_PK", Currency.CURRENCY.ID);
        public static final UniqueKey<CustomerRecord> CUSTOMER_PK = Internal.createUniqueKey(Customer.CUSTOMER, "CUSTOMER_PK", Customer.CUSTOMER.ID);
        public static final UniqueKey<TransactionRecord> TRANSACTION_PK = Internal.createUniqueKey(Transaction.TRANSACTION, "TRANSACTION_PK", Transaction.TRANSACTION.ID);
        public static final UniqueKey<TransferRecord> TRANSFER_PK = Internal.createUniqueKey(Transfer.TRANSFER, "TRANSFER_PK", Transfer.TRANSFER.ID);
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountRecord, BankRecord> ACCOUNT_BANK_ID_FK = Internal.createForeignKey(jooq.generated.code.Keys.BANK_PK, Account.ACCOUNT, "ACCOUNT_BANK_ID_FK", Account.ACCOUNT.BANK_ID);
        public static final ForeignKey<AccountRecord, CustomerRecord> ACCOUNT_CUSTOMER_ID_FK = Internal.createForeignKey(jooq.generated.code.Keys.CUSTOMER_PK, Account.ACCOUNT, "ACCOUNT_CUSTOMER_ID_FK", Account.ACCOUNT.CUSTOMER_ID);
        public static final ForeignKey<AccountRecord, CurrencyRecord> ACCOUNT_CURRENCY_ID_FK = Internal.createForeignKey(jooq.generated.code.Keys.CURRENCY_PK, Account.ACCOUNT, "ACCOUNT_CURRENCY_ID_FK", Account.ACCOUNT.CURRENCY_ID);
        public static final ForeignKey<AccountRecord, AccountTypeRecord> ACCOUNT_ACCOUNT_TYPE_ID_FK = Internal.createForeignKey(jooq.generated.code.Keys.ACCOUNT_TYPE_PK, Account.ACCOUNT, "ACCOUNT_ACCOUNT_TYPE_ID_FK", Account.ACCOUNT.TYPE_ID);
        public static final ForeignKey<TransactionRecord, AccountRecord> TRANSACTION_ACCOUNT_ID_FK = Internal.createForeignKey(jooq.generated.code.Keys.ACCOUNT_PK, Transaction.TRANSACTION, "TRANSACTION_ACCOUNT_ID_FK", Transaction.TRANSACTION.ACCOUNT_ID);
        public static final ForeignKey<TransactionRecord, TransferRecord> TRANSACTION_TRANSFER_ID_FK = Internal.createForeignKey(jooq.generated.code.Keys.TRANSFER_PK, Transaction.TRANSACTION, "TRANSACTION_TRANSFER_ID_FK", Transaction.TRANSACTION.TRANSFER_ID);
        public static final ForeignKey<TransferRecord, AccountRecord> TRANSFER_ACCOUNT_ID_FK_1 = Internal.createForeignKey(jooq.generated.code.Keys.ACCOUNT_PK, Transfer.TRANSFER, "TRANSFER_ACCOUNT_ID_FK_1", Transfer.TRANSFER.FROM_ACCOUNT_ID);
        public static final ForeignKey<TransferRecord, AccountRecord> TRANSFER_ACCOUNT_ID_FK_2 = Internal.createForeignKey(jooq.generated.code.Keys.ACCOUNT_PK, Transfer.TRANSFER, "TRANSFER_ACCOUNT_ID_FK_2", Transfer.TRANSFER.TO_ACCOUNT_ID);
    }
}
